"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTickArrayDataForPosition = void 0;
const public_1 = require("../public");
function getTickArrayDataForPosition(ctx, position, whirlpool, refresh) {
    return __awaiter(this, void 0, void 0, function* () {
        const lowerTickArrayKey = public_1.PDAUtil.getTickArrayFromTickIndex(position.tickLowerIndex, whirlpool.tickSpacing, position.whirlpool, ctx.program.programId).publicKey;
        const upperTickArrayKey = public_1.PDAUtil.getTickArrayFromTickIndex(position.tickUpperIndex, whirlpool.tickSpacing, position.whirlpool, ctx.program.programId).publicKey;
        return yield ctx.fetcher.listTickArrays([lowerTickArrayKey, upperTickArrayKey], refresh);
    });
}
exports.getTickArrayDataForPosition = getTickArrayDataForPosition;
